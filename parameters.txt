# Scene_1

# 物体初始位置范围（x,y,z)
SPAWN_REGION = [(-7, -7, 0.1), (7, 7, 0.1)]
# 物体初始速度范围（x,y,z)
VELOCITY_RANGE = [(-3., -3., -1), (3., 3., -1)]
COULOMB_CONSTANT = 8.987551e9  # 库仑常数

CLEVR_OBJECTS = ("cube", "cylinder", "sphere")
KUBASIC_OBJECTS = ("cube", "cylinder", "sphere", "cone", "torus", "gear",
                   "torus_knot", "sponge", "spot", "teapot", "suzanne")


if properties["material_name"] == "metal":
    obj.material = kb.PrincipledBSDFMaterial(color=properties["random_color"], metallic=1.0,
                                             roughness=0.2, ior=2.5)
    obj.friction = 0.5
    obj.restitution = 0.3
    obj.mass = rng.randint(3, 4) * properties["size"] ** 3
    # 质量保留两位小数
    obj.mass = round(obj.mass, 2)
    obj.charge = rng.choice([-7, -9, -11, 7, 9, 11]) * 1e-6  # 随机分配电荷


else:  # material_name == "rubber"
    obj.material = kb.PrincipledBSDFMaterial(color=properties["random_color"], metallic=0.,
                                             ior=1.25, roughness=0.7,
                                             specular=0.33)
    # obj.friction = 0
    obj.friction = 0.9
    obj.restitution = 0.7
    obj.mass *= rng.randint(1, 3) * properties["size"] ** 3
    # 质量保留两位小数
    obj.mass = round(obj.mass, 2)
    obj.charge = rng.choice([-7, -9, -11, 7, 9, 11]) * 1e-6  # 随机分配电荷